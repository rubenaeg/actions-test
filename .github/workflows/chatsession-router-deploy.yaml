name: "[APP-WEB] Build Test Deploy"
on:
  push:
    branches:
      - development
    paths:
      - 'chatbots/team/botify-team-bot/**'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  JOVO_STAGE: staging
  JOVO_LOG_LEVEL: WARN
  AIRTABLE_BASE_ID_TURNS: 1234
  AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_APIKEY }}
  RASA_NLU: http://rasa.nlu/
  SIPGATE_API_URI: http://localhost:6000
  ROUTER_URI: http://sipgate.router/
  STATUSPAGE_URI: http://sipgate.statuspage/

jobs:
  build:
    uses: ./chatsession-router-build.yaml,
    secrets: 
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_APIKEY }}

  build-container:
      runs-on: ubuntu-latest
      needs: [build]
      defaults:
        run:
          shell: bash
          working-directory: chatbots/team/botify-team-bot
      env:
        PROJECT_ID: ${{ secrets.CORE_PROJECT_ID }}
        IMAGE_NAME: 'botify-team-bot'
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v2
          with:
            node-version: '16'
            registry-url: 'https://npm.pkg.github.com/'
            scope: '@sipgate'

        - uses: google-github-actions/setup-gcloud@v0
          with:
            service_account_key: ${{ secrets.CORE_SA_KEY }}
            project_id: ${{ secrets.CORE_PROJECT_ID }}

        # Configure Docker to use the gcloud command-line tool as a credential
        # helper for authentication
        - run: |-
            gcloud --quiet auth configure-docker
        # Build the Docker image
        -  run: |-
            docker build --build-arg "GITHUB_TOKEN= ${{ secrets.GITHUB_TOKEN }}"  --tag "eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:latest" --tag "eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ github.event.pust.head.sha }}" .
        # Push the Docker image to Google Container Registry
        - run: |-
            docker push "eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:latest"
        - run: |-
            docker push "eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ github.event.pull_request.head.sha }}"
      
  deploy-development:
      runs-on: ubuntu-latest
      environment: development
      needs: [ build, build-container]
      defaults:
         run:
          shell: bash
          working-directory: chatbots/team/botify-team-bot
      env:
        PROJECT_ID: ${{ secrets.CORE_PROJECT_ID }}
        IMAGE_NAME: 'botify-team-bot'
        DEPLOYMENT: 'botify-team-bot'
        GKE_NAMESPACE: 'botify-team-core'
        GKE_INSTANCE_ZONE: 'europe-west3'
      steps:
        - uses: ameydev/gke-kubectl-action@master
          env:
            PROJECT_ID: ${{ secrets.CORE_PROJECT_ID }}
            APPLICATION_CREDENTIALS: ${{ secrets.CD_SA_KEY }}
            CLUSTER_NAME: ${{ secrets.CORE_GKE_CLUSTER_NAME }}
            ZONE_NAME: ${{ env.GKE_INSTANCE_ZONE }}
          with:
            args: rollout restart deployment ${{ env.DEPLOYMENT }} -n ${{ env.GKE_NAMESPACE }}
        # Check for rollout to be successful
        - uses: ameydev/gke-kubectl-action@master
          env:
            PROJECT_ID: ${{ secrets.CORE_PROJECT_ID }}
            APPLICATION_CREDENTIALS: ${{ secrets.CD_SA_KEY }}
            CLUSTER_NAME: ${{ secrets.CORE_GKE_CLUSTER_NAME }}
            ZONE_NAME: ${{ env.GKE_INSTANCE_ZONE }}
          with:
            args: rollout status deployment ${{ env.DEPLOYMENT }}  -n ${{ env.GKE_NAMESPACE }}
